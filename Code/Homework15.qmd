---
title: "Homework15"
format: html
editor: visual
---

```{r}
rm(list = ls())
library(tidyverse)
library(here)
```

Loading in the Data file consumption

```{r}
compensation <- read.csv(here("Data", "compensation.csv"))
```

Using dpplyr always takes and outputs a data frame.

Section 3.1 of GSWR

```{r}
summary(compensation)
```

Section 3.3 of GSWR

```{r}
names(compensation)
select(compensation, Fruit)
```

you can also leave out one column with select

```{r}
select(compensation, -Root)
```

slice

```{r}
slice(compensation, 2) # grabs row 2 
slice(compensation, 2:10) # grabs rows 2-10
slice(compensation, c(2, 4,10)) # grabs discontinous rows
```

filter - finding all rows where the given boolean operator is true.

```{r}
filter(compensation, Fruit > 80)
filter(compensation, Fruit > 80 | Fruit < 20)
```

You can save the outputs of these functions by making them save the outputted data frame as a variable in your environment

```{r}
Hi_Lo_Fruit <- filter(compensation, Fruit > 80 | Fruit < 20)
```

Section 3.4 of GSWR Transforming

Mutate you can add the created variable to the original data frame by overwriting it

```{r}
compensation <- mutate(compensation, logFruit = log(Fruit))
head(compensation)
```

Section 3.5 Sorting data

arrange() arranges rows in increasing order by a certain column variable

```{r}
arrange(compensation, Fruit) 
```

Section 3.6 Top Tips How to use more than one dplyr verbs in one line of code

```{r}
head(select(filter(compensation, Fruit > 80), Root))
```

gives the rootstalk widths that produce more than 80kg of fruit

Top Tip 2

%\>% piping tells R to take output of one command and put it into another

```{r}
compensation %>% filter(Fruit >80) %>% select(Root)
```

Section 3.7 GSWR Calculating summary statistics about groups of yourgro data

finding the mean of grazed and ungrazed fruit production

```{r}
summarise(group_by(compensation, Grazing), meanFruit = mean(Fruit)
)
```

you can add more statistics easily to the above code

```{r}
summarise(group_by(compensation, Grazing), meanFruit = mean(Fruit), sdFruit = sd(Fruit))
```
